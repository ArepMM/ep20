#include    "ep20.h"

#include    <CfgReader.h>
#include    <QDir>

//------------------------------------------------------------------------------
// Конструктор
//------------------------------------------------------------------------------
EP20::EP20()
{

}

//------------------------------------------------------------------------------
// Деструктор
//------------------------------------------------------------------------------
EP20::~EP20()
{

}

//------------------------------------------------------------------------------
// Инициализация
//------------------------------------------------------------------------------
void EP20::initialization()
{
    // Вызываем метод
    initHighVoltageScheme();
}

//------------------------------------------------------------------------------
// Инициализация высоковольтной схемы
//------------------------------------------------------------------------------
void EP20::initHighVoltageScheme()
{
    // Вызываем цикл по числу пантографоф
    for (size_t i = 0; i < pantograph.size(); ++i)
    {
        pantograph[i] = new Pantograph();
        // Читаем конфиг
        pantograph[i]->read_custom_config(config_dir + QDir::separator() + "pantograph");
    }
}

//------------------------------------------------------------------------------
// Шаги моделирования
//------------------------------------------------------------------------------
void EP20::step(double t, double dt)
{
    // Вызываем метод
    stepHighVoltageScheme(t, dt);

    // Выводим на экран симулятор, высоту подъема/спуска, выходное напряжение, род ток!
    DebugMsg = QString("t: %1 s PANT_AC1: %2 m %3 kV %4")
            .arg(t, 10, 'f', 2)
            .arg(pantograph[PANT_AC1]->getHeight(), 4, 'f', 2)
            .arg(pantograph[PANT_AC1]->getUout() / 1000.0, 4, 'f', 1)
            .arg(pantograph[PANT_AC1]->getCurrentKindOut(), 1);
}

//------------------------------------------------------------------------------
// Шаг моделирования высоковольтной схемы
//------------------------------------------------------------------------------
void EP20::stepHighVoltageScheme(double t, double dt)
{
    // Пускаем цикл по пантографам и задаем начальные значения
    for (auto pant : pantograph)
    {
        pant->setUks(25000.0);
        pant->setCurrentKindIn(1);
        pant->step(t, dt);      
    }
}

//------------------------------------------------------------------------------
// Загрузка конфига
//------------------------------------------------------------------------------
void EP20::loadConfig(QString cfg_path)
{
    CfgReader cfg;

    if (cfg.load(cfg_path))
    {

    }
}

void EP20::keyProcess()
{
    pantograph[PANT_AC1]->setState(getKeyState(KEY_P));
}

GET_VEHICLE(EP20)
